{"version":3,"file":"restaurant-menu/index.js","mappings":"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,GAC/B5B,oDAAA,CAAChG,sEAAgB;MACbkJ,KAAK,EAAC,sCAAsC;MAC5CnI,UAAU,EAAEA;IAAW,CAC1B,CACA,CAER,CACC,CAAC;EAEnB,CAAC;EAEDoI,IAAI,EAAE,SAAAA,CAAA,EAAW;IACb;IACA,OAAO,IAAI;EACf;AACJ,CAAC,CAAC;;;;;;;;;;;AChwBF;;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;UAEA;UACA;;;;;WCzBA;WACA;WACA;WACA;WACA,+BAA+B,wCAAwC;WACvE;WACA;WACA;WACA;WACA,iBAAiB,qBAAqB;WACtC;WACA;WACA,kBAAkB,qBAAqB;WACvC;WACA;WACA,KAAK;WACL;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;WC3BA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;WCNA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,MAAM,qBAAqB;WAC3B;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;;;;;UEjDA;UACA;UACA;UACA;UACA","sources":["webpack://easy-restaurant-menu/./src/restaurant-menu/index.js","webpack://easy-restaurant-menu/./src/restaurant-menu/editor.scss?8846","webpack://easy-restaurant-menu/./src/restaurant-menu/style.scss?7c71","webpack://easy-restaurant-menu/external window \"React\"","webpack://easy-restaurant-menu/external window [\"wp\",\"apiFetch\"]","webpack://easy-restaurant-menu/external window [\"wp\",\"blockEditor\"]","webpack://easy-restaurant-menu/external window [\"wp\",\"blocks\"]","webpack://easy-restaurant-menu/external window [\"wp\",\"components\"]","webpack://easy-restaurant-menu/external window [\"wp\",\"data\"]","webpack://easy-restaurant-menu/external window [\"wp\",\"element\"]","webpack://easy-restaurant-menu/external window [\"wp\",\"i18n\"]","webpack://easy-restaurant-menu/external window [\"wp\",\"serverSideRender\"]","webpack://easy-restaurant-menu/webpack/bootstrap","webpack://easy-restaurant-menu/webpack/runtime/chunk loaded","webpack://easy-restaurant-menu/webpack/runtime/compat get default export","webpack://easy-restaurant-menu/webpack/runtime/define property getters","webpack://easy-restaurant-menu/webpack/runtime/hasOwnProperty shorthand","webpack://easy-restaurant-menu/webpack/runtime/make namespace object","webpack://easy-restaurant-menu/webpack/runtime/jsonp chunk loading","webpack://easy-restaurant-menu/webpack/before-startup","webpack://easy-restaurant-menu/webpack/startup","webpack://easy-restaurant-menu/webpack/after-startup"],"sourcesContent":["/**\n * Registrazione del blocco Restaurant Menu per Gutenberg\n */\nimport { registerBlockType } from '@wordpress/blocks';\nimport { \n    InspectorControls,\n    ColorPalette,\n    useBlockProps,\n    AlignmentToolbar\n} from '@wordpress/block-editor';\nimport { \n    PanelBody, \n    SelectControl, \n    RangeControl,\n    ToggleControl,\n    RadioControl,\n    BoxControl,\n    Button,\n    __experimentalBoxControl as BoxControlNew,\n    Flex,\n    FlexItem,\n    Notice,\n    ButtonGroup,\n    Toolbar\n} from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport { useSelect } from '@wordpress/data';\nimport { Fragment, useState, useEffect } from '@wordpress/element';\nimport ServerSideRender from '@wordpress/server-side-render';\nimport apiFetch from '@wordpress/api-fetch';\n\nimport './editor.scss';\nimport './style.scss';\n\n// Importa la configurazione dal file block.json\nimport metadata from './block.json';\n\n// Ottieni il BoxControl compatibile con la versione attuale di WP\nconst BoxCtrl = BoxControlNew || BoxControl;\n\n// Funzione di utilità per convertire un oggetto margin/padding in stringa CSS\nconst getSpacingCssValue = (spacingObj) => {\n    if (!spacingObj) return null;\n    return `${spacingObj.top}px ${spacingObj.right}px ${spacingObj.bottom}px ${spacingObj.left}px`;\n};\n\n// Funzione per resettare un oggetto di spaziatura ai valori predefiniti\nconst getDefaultSpacing = (defaultValues = {}) => {\n    return {\n        top: defaultValues.top || 0,\n        right: defaultValues.right || 0,\n        bottom: defaultValues.bottom || 0,\n        left: defaultValues.left || 0\n    };\n};\n\nregisterBlockType(metadata.name, {\n    edit: function(props) {\n        const { attributes, setAttributes } = props;\n        const blockProps = useBlockProps();\n        \n        // Stato per memorizzare menu e sezioni caricate dall'API\n        const [menus, setMenus] = useState([]);\n        const [sections, setSections] = useState([]);\n        const [isMenuLoading, setIsMenuLoading] = useState(true);\n        const [isSectionLoading, setIsSectionLoading] = useState(false);\n        \n        // Nuovo stato per le opzioni globali\n        const [globalOptions, setGlobalOptions] = useState(null);\n        const [isLoadingOptions, setIsLoadingOptions] = useState(true);\n        \n        // Funzione per verificare se è un blocco nuovo\n        const isNewBlock = () => {\n            // Un blocco è considerato nuovo se ha i valori predefiniti dal block.json\n            return (\n                attributes.displayType === metadata.attributes.displayType.default &&\n                attributes.titleColor === metadata.attributes.titleColor.default &&\n                attributes.sectionTitleColor === metadata.attributes.sectionTitleColor.default &&\n                attributes.priceColor === metadata.attributes.priceColor.default &&\n                attributes.descriptionColor === metadata.attributes.descriptionColor.default &&\n                attributes.backgroundColor === metadata.attributes.backgroundColor.default &&\n                attributes.borderColor === metadata.attributes.borderColor.default &&\n                attributes.borderRadius === metadata.attributes.borderRadius.default &&\n                // Verificando pochi attributi chiave è sufficiente per determinare se è un blocco nuovo\n                true\n            );\n        };\n        \n        // Funzione per applicare le impostazioni predefinite dalle opzioni globali\n        const applyGlobalDefaults = (options) => {\n            if (!options) return;\n            \n            const { preset_details, default_layout } = options;\n            \n            // Aggiorna gli attributi con i valori delle opzioni globali\n            const updates = {\n                displayType: default_layout || 'list'\n            };\n            \n            // Se è disponibile un preset, applica le sue impostazioni\n            if (preset_details) {\n                updates.titleColor = preset_details.menu_title_color;\n                updates.sectionTitleColor = preset_details.section_title_color;\n                updates.priceColor = preset_details.price_color;\n                updates.descriptionColor = preset_details.description_color;\n                updates.backgroundColor = preset_details.background_color;\n                updates.borderColor = preset_details.border_color;\n                updates.borderRadius = preset_details.border_radius;\n                \n                // Imposta gli allineamenti in base al preset\n                updates.menuTitleAlignment = preset_details.text_alignment;\n                updates.sectionTitleAlignment = preset_details.text_alignment;\n                updates.menuDescriptionAlignment = preset_details.text_alignment;\n                updates.sectionDescriptionAlignment = preset_details.text_alignment;\n                \n                // Imposta le dimensioni del carattere\n                if (preset_details.spacing) {\n                    updates.itemSpacing = preset_details.spacing;\n                }\n            }\n            \n            // Applica tutti gli aggiornamenti\n            setAttributes(updates);\n        };\n        \n        // Carica le opzioni globali all'inizio\n        useEffect(() => {\n            setIsLoadingOptions(true);\n            \n            apiFetch({ \n                path: '/easy-restaurant-menu/v1/options'\n            }).then(data => {\n                setGlobalOptions(data);\n                setIsLoadingOptions(false);\n                \n                // Se è un nuovo blocco, applica le impostazioni predefinite dalle opzioni globali\n                if (isNewBlock()) {\n                    applyGlobalDefaults(data);\n                }\n            }).catch(error => {\n                console.error('Errore nel caricamento delle opzioni globali:', error);\n                setIsLoadingOptions(false);\n            });\n        }, []);\n        \n        // Carica i menu quando il componente è montato\n        useEffect(() => {\n            setIsMenuLoading(true);\n            \n            apiFetch({ \n                path: '/easy-restaurant-menu/v1/menus'\n            }).then(data => {\n                setMenus(data || []);\n                setIsMenuLoading(false);\n            }).catch(error => {\n                console.error('Errore nel caricamento dei menu:', error);\n                setIsMenuLoading(false);\n            });\n        }, []);\n        \n        // Carica le sezioni quando viene selezionato un menu\n        useEffect(() => {\n            if (!attributes.menu_id) {\n                setSections([]);\n                return;\n            }\n            \n            setIsSectionLoading(true);\n            \n            apiFetch({ \n                path: `/easy-restaurant-menu/v1/menus/${attributes.menu_id}/sections`\n            }).then(data => {\n                setSections(data || []);\n                setIsSectionLoading(false);\n                \n                // Solo se showAllSections è false, selezioniamo la prima sezione di default\n                if (!attributes.showAllSections && !attributes.section_id && data && data.length > 0) {\n                    setAttributes({ section_id: data[0].id.toString() });\n                } else if (!attributes.showAllSections && attributes.section_id) {\n                    // Verifica se la sezione selezionata esiste nel nuovo menu\n                    const sectionExists = data.some(section => section.id.toString() === attributes.section_id);\n                    if (!sectionExists && data.length > 0) {\n                        setAttributes({ section_id: data[0].id.toString() });\n                    }\n                }\n            }).catch(error => {\n                console.error('Errore nel caricamento delle sezioni:', error);\n                setIsSectionLoading(false);\n            });\n        }, [attributes.menu_id]);\n        \n        // Funzione per reset di tutte le spaziature\n        const resetAllSpacing = () => {\n            setAttributes({\n                imageMargin: getDefaultSpacing(),\n                imagePadding: getDefaultSpacing(),\n                titleMargin: getDefaultSpacing(),\n                priceMargin: getDefaultSpacing(),\n                descriptionMargin: getDefaultSpacing(),\n                contentPadding: getDefaultSpacing({ top: 15, right: 15, bottom: 15, left: 15 })\n            });\n        };\n        \n        // Quando si cambia l'opzione di visualizzare tutte le sezioni\n        const handleShowAllSectionsChange = (value) => {\n            setAttributes({ showAllSections: value });\n            \n            // Se si passa a visualizzare tutte le sezioni, reset della sezione selezionata\n            if (value) {\n                setAttributes({ section_id: '' });\n            } else if (sections && sections.length > 0) {\n                // Se si passa a visualizzare una sola sezione, seleziona la prima se non ce n'è una già selezionata\n                if (!attributes.section_id) {\n                    setAttributes({ section_id: sections[0].id.toString() });\n                }\n            }\n        };\n        \n        // Prepara le opzioni per il SelectControl dei menu\n        const menuOptions = [];\n        \n        if (isMenuLoading) {\n            menuOptions.push({ value: '', label: __('Caricamento menu...', 'easy-restaurant-menu') });\n        } else if (menus && menus.length > 0) {\n            menuOptions.push({ value: '', label: __('Seleziona un menu', 'easy-restaurant-menu') });\n            \n            menus.forEach((menu) => {\n                menuOptions.push({\n                    value: menu.id.toString(),\n                    label: menu.nome\n                });\n            });\n        } else {\n            menuOptions.push({ value: '', label: __('Nessun menu disponibile', 'easy-restaurant-menu') });\n        }\n        \n        // Prepara le opzioni per il SelectControl delle sezioni\n        const sectionOptions = [];\n        \n        if (!attributes.menu_id) {\n            sectionOptions.push({ value: '', label: __('Prima seleziona un menu', 'easy-restaurant-menu') });\n        } else if (isSectionLoading) {\n            sectionOptions.push({ value: '', label: __('Caricamento sezioni...', 'easy-restaurant-menu') });\n        } else if (sections && sections.length > 0) {\n            sectionOptions.push({ value: '', label: __('Seleziona una sezione', 'easy-restaurant-menu') });\n            \n            sections.forEach((section) => {\n                sectionOptions.push({\n                    value: section.id.toString(),\n                    label: section.nome\n                });\n            });\n        } else {\n            sectionOptions.push({ value: '', label: __('Nessuna sezione disponibile in questo menu', 'easy-restaurant-menu') });\n        }\n        \n        // Opzioni per il tipo di visualizzazione\n        const displayOptions = [\n            { value: 'grid', label: __('Griglia', 'easy-restaurant-menu') },\n            { value: 'list', label: __('Lista', 'easy-restaurant-menu') }\n        ];\n        \n        // Opzioni per l'effetto hover\n        const hoverOptions = [\n            { value: 'none', label: __('Nessuno', 'easy-restaurant-menu') },\n            { value: 'zoom', label: __('Zoom', 'easy-restaurant-menu') },\n            { value: 'shadow', label: __('Ombra', 'easy-restaurant-menu') },\n            { value: 'border', label: __('Bordo', 'easy-restaurant-menu') }\n        ];\n\n        // Opzioni per l'allineamento dell'immagine nella lista\n        const alignmentOptions = [\n            { value: 'center', label: __('Allineamento centrato', 'easy-restaurant-menu') },\n            { value: 'top', label: __('Allineamento in alto', 'easy-restaurant-menu') },\n        ];\n        \n        // Opzioni per l'allineamento del testo\n        const textAlignmentOptions = [\n            { value: 'left', label: __('Sinistra', 'easy-restaurant-menu') },\n            { value: 'center', label: __('Centro', 'easy-restaurant-menu') },\n            { value: 'right', label: __('Destra', 'easy-restaurant-menu') }\n        ];\n        \n        // Presets di spaziatura\n        const applySpacingPreset = (preset) => {\n            switch(preset) {\n                case 'compact':\n                    setAttributes({\n                        imageMargin: { top: 0, right: 0, bottom: 10, left: 0 },\n                        imagePadding: { top: 0, right: 0, bottom: 0, left: 0 },\n                        titleMargin: { top: 0, right: 0, bottom: 5, left: 0 },\n                        priceMargin: { top: 0, right: 0, bottom: 0, left: 10 },\n                        descriptionMargin: { top: 5, right: 0, bottom: 0, left: 0 },\n                        contentPadding: { top: 10, right: 10, bottom: 10, left: 10 }\n                    });\n                    break;\n                    \n                case 'normal':\n                    setAttributes({\n                        imageMargin: { top: 0, right: 0, bottom: 15, left: 0 },\n                        imagePadding: { top: 0, right: 0, bottom: 0, left: 0 },\n                        titleMargin: { top: 0, right: 0, bottom: 10, left: 0 },\n                        priceMargin: { top: 0, right: 0, bottom: 5, left: 15 },\n                        descriptionMargin: { top: 10, right: 0, bottom: 0, left: 0 },\n                        contentPadding: { top: 15, right: 15, bottom: 15, left: 15 }\n                    });\n                    break;\n                    \n                case 'spacious':\n                    setAttributes({\n                        imageMargin: { top: 0, right: 0, bottom: 20, left: 0 },\n                        imagePadding: { top: 5, right: 5, bottom: 5, left: 5 },\n                        titleMargin: { top: 0, right: 0, bottom: 15, left: 0 },\n                        priceMargin: { top: 0, right: 0, bottom: 10, left: 20 },\n                        descriptionMargin: { top: 15, right: 0, bottom: 0, left: 0 },\n                        contentPadding: { top: 20, right: 20, bottom: 20, left: 20 }\n                    });\n                    break;\n            }\n        };\n        \n        return (\n            <Fragment>\n                <InspectorControls>\n                    <PanelBody title={__('Impostazioni Generali', 'easy-restaurant-menu')} initialOpen={true}>\n                        <SelectControl\n                            label={__('Menu', 'easy-restaurant-menu')}\n                            value={attributes.menu_id}\n                            options={menuOptions}\n                            onChange={(value) => setAttributes({ menu_id: value, section_id: '' })}\n                        />\n                        \n                        {attributes.menu_id && sections && sections.length > 0 && (\n                            <Fragment>\n                                <ToggleControl\n                                    label={__('Mostra tutte le sezioni', 'easy-restaurant-menu')}\n                                    checked={attributes.showAllSections}\n                                    onChange={handleShowAllSectionsChange}\n                                    help={attributes.showAllSections ? \n                                        __('Visualizza tutte le sezioni del menu', 'easy-restaurant-menu') : \n                                        __('Visualizza solo una sezione specifica', 'easy-restaurant-menu')}\n                                />\n                                \n                                {!attributes.showAllSections && (\n                                    <SelectControl\n                                        label={__('Sezione Menu', 'easy-restaurant-menu')}\n                                        value={attributes.section_id}\n                                        options={sectionOptions}\n                                        onChange={(value) => setAttributes({ section_id: value })}\n                                        disabled={!attributes.menu_id || isSectionLoading}\n                                    />\n                                )}\n                            </Fragment>\n                        )}\n                        \n                        {attributes.menu_id && sections && sections.length === 0 && !isSectionLoading && (\n                            <Notice status=\"warning\" isDismissible={false}>\n                                {__('Questo menu non ha sezioni. Aggiungine almeno una nell\\'area amministrativa.', 'easy-restaurant-menu')}\n                            </Notice>\n                        )}\n                        \n                        <SelectControl\n                            label={__('Tipo di visualizzazione', 'easy-restaurant-menu')}\n                            value={attributes.displayType}\n                            options={displayOptions}\n                            onChange={(value) => setAttributes({ displayType: value })}\n                        />\n                        \n                        {attributes.displayType === 'grid' && (\n                            <RangeControl\n                                label={__('Numero di colonne', 'easy-restaurant-menu')}\n                                value={attributes.columns}\n                                onChange={(value) => setAttributes({ columns: value })}\n                                min={1}\n                                max={4}\n                            />\n                        )}\n                        \n                        {attributes.displayType === 'list' && attributes.showImages && (\n                            <RadioControl\n                                label={__('Allineamento immagine-testo', 'easy-restaurant-menu')}\n                                selected={attributes.listImageAlignment}\n                                options={alignmentOptions}\n                                onChange={(value) => setAttributes({ listImageAlignment: value })}\n                                help={__('Sceglie come allineare verticalmente il testo rispetto all\\'immagine nella vista lista', 'easy-restaurant-menu')}\n                            />\n                        )}\n                        \n                        <ToggleControl\n                            label={__('Mostra immagini', 'easy-restaurant-menu')}\n                            checked={attributes.showImages}\n                            onChange={(value) => setAttributes({ showImages: value })}\n                        />\n                        \n                        {attributes.showImages && (\n                            <>\n                                <ToggleControl\n                                    label={__('Immagini quadrate', 'easy-restaurant-menu')}\n                                    checked={attributes.imageSquare}\n                                    onChange={(value) => setAttributes({ imageSquare: value })}\n                                    help={__('Se disattivato, le immagini manterranno il loro rapporto originale', 'easy-restaurant-menu')}\n                                />\n                                \n                                {attributes.displayType === 'grid' && (\n                                    <RangeControl\n                                        label={__('Altezza immagini griglia (px)', 'easy-restaurant-menu')}\n                                        value={attributes.imageSizeGrid}\n                                        onChange={(value) => setAttributes({ imageSizeGrid: value })}\n                                        min={100}\n                                        max={400}\n                                        step={10}\n                                    />\n                                )}\n                                \n                                {attributes.displayType === 'list' && (\n                                    <RangeControl\n                                        label={__('Dimensione immagini lista (px)', 'easy-restaurant-menu')}\n                                        value={attributes.imageSizeList}\n                                        onChange={(value) => setAttributes({ imageSizeList: value })}\n                                        min={60}\n                                        max={200}\n                                        step={10}\n                                    />\n                                )}\n                            </>\n                        )}\n                        \n                        <ToggleControl\n                            label={__('Mostra prezzi', 'easy-restaurant-menu')}\n                            checked={attributes.showPrices}\n                            onChange={(value) => setAttributes({ showPrices: value })}\n                        />\n                        \n                        <ToggleControl\n                            label={__('Mostra descrizioni elementi', 'easy-restaurant-menu')}\n                            checked={attributes.showDescriptions}\n                            onChange={(value) => setAttributes({ showDescriptions: value })}\n                        />\n                        \n                        <ToggleControl\n                            label={__('Mostra descrizione menu', 'easy-restaurant-menu')}\n                            checked={attributes.showMenuDescription}\n                            onChange={(value) => setAttributes({ showMenuDescription: value })}\n                            help={__('Mostra/nascondi la descrizione del menu completo', 'easy-restaurant-menu')}\n                        />\n                        \n                        <ToggleControl\n                            label={__('Mostra descrizioni sezioni', 'easy-restaurant-menu')}\n                            checked={attributes.showSectionDescriptions}\n                            onChange={(value) => setAttributes({ showSectionDescriptions: value })}\n                            help={__('Mostra/nascondi le descrizioni delle sezioni', 'easy-restaurant-menu')}\n                        />\n                        \n                        <ToggleControl\n                            label={__('Mostra titolo menu', 'easy-restaurant-menu')}\n                            checked={attributes.showMenuTitle}\n                            onChange={(value) => setAttributes({ showMenuTitle: value })}\n                            help={__('Mostra/nascondi il titolo principale del menu', 'easy-restaurant-menu')}\n                        />\n                    </PanelBody>\n                    \n                    <PanelBody title={__('Stile e Colori', 'easy-restaurant-menu')} initialOpen={false}>\n                        <p>{__('Colore titoli elementi', 'easy-restaurant-menu')}</p>\n                        <ColorPalette\n                            value={attributes.titleColor}\n                            onChange={(value) => setAttributes({ titleColor: value })}\n                        />\n                        \n                        <p>{__('Colore titoli sezioni', 'easy-restaurant-menu')}</p>\n                        <ColorPalette\n                            value={attributes.sectionTitleColor}\n                            onChange={(value) => setAttributes({ sectionTitleColor: value })}\n                        />\n                        \n                        <p>{__('Colore linea sotto i titoli sezioni', 'easy-restaurant-menu')}</p>\n                        <ColorPalette\n                            value={attributes.sectionTitleUnderlineColor}\n                            onChange={(value) => setAttributes({ sectionTitleUnderlineColor: value })}\n                        />\n                        \n                        <p>{__('Colore prezzi', 'easy-restaurant-menu')}</p>\n                        <ColorPalette\n                            value={attributes.priceColor}\n                            onChange={(value) => setAttributes({ priceColor: value })}\n                        />\n                        \n                        <p>{__('Colore descrizioni', 'easy-restaurant-menu')}</p>\n                        <ColorPalette\n                            value={attributes.descriptionColor}\n                            onChange={(value) => setAttributes({ descriptionColor: value })}\n                        />\n                        \n                        <p>{__('Colore sfondo elementi', 'easy-restaurant-menu')}</p>\n                        <ColorPalette\n                            value={attributes.backgroundColor}\n                            onChange={(value) => setAttributes({ backgroundColor: value })}\n                        />\n                        \n                        <RangeControl\n                            label={__('Spaziatura tra elementi (px)', 'easy-restaurant-menu')}\n                            value={attributes.itemSpacing}\n                            onChange={(value) => setAttributes({ itemSpacing: value })}\n                            min={0}\n                            max={50}\n                        />\n                    </PanelBody>\n                    \n                    <PanelBody title={__('Bordi e Effetti', 'easy-restaurant-menu')} initialOpen={false}>\n                        <RangeControl\n                            label={__('Raggio bordo (px)', 'easy-restaurant-menu')}\n                            value={attributes.borderRadius}\n                            onChange={(value) => setAttributes({ borderRadius: value })}\n                            min={0}\n                            max={20}\n                        />\n                        \n                        <RangeControl\n                            label={__('Spessore bordo (px)', 'easy-restaurant-menu')}\n                            value={attributes.borderWidth}\n                            onChange={(value) => setAttributes({ borderWidth: value })}\n                            min={0}\n                            max={10}\n                        />\n                        \n                        {attributes.borderWidth > 0 && (\n                            <>\n                                <p>{__('Colore bordo', 'easy-restaurant-menu')}</p>\n                                <ColorPalette\n                                    value={attributes.borderColor}\n                                    onChange={(value) => setAttributes({ borderColor: value })}\n                                />\n                            </>\n                        )}\n                        \n                        <ToggleControl\n                            label={__('Ombra elemento', 'easy-restaurant-menu')}\n                            checked={attributes.boxShadow}\n                            onChange={(value) => setAttributes({ boxShadow: value })}\n                        />\n                        \n                        <RadioControl\n                            label={__('Effetto hover', 'easy-restaurant-menu')}\n                            selected={attributes.hoverEffect}\n                            options={hoverOptions}\n                            onChange={(value) => setAttributes({ hoverEffect: value })}\n                        />\n                    </PanelBody>\n                    \n                    <PanelBody title={__('Spaziatura Elementi', 'easy-restaurant-menu')} initialOpen={false}>\n                        <p className=\"erm-spacing-intro\">\n                            {__('Personalizza la spaziatura degli elementi del menu per ottenere il layout desiderato.', 'easy-restaurant-menu')}\n                        </p>\n                        \n                        <Flex direction=\"row\" justify=\"space-between\" align=\"center\" style={{ marginBottom: '15px' }}>\n                            <FlexItem>\n                                <p><strong>{__('Preset rapidi', 'easy-restaurant-menu')}</strong></p>\n                            </FlexItem>\n                            <FlexItem>\n                                <Button \n                                    isSecondary\n                                    isSmall\n                                    onClick={() => applySpacingPreset('compact')}\n                                >\n                                    {__('Compatto', 'easy-restaurant-menu')}\n                                </Button>\n                            </FlexItem>\n                            <FlexItem>\n                                <Button \n                                    isSecondary\n                                    isSmall\n                                    onClick={() => applySpacingPreset('normal')}\n                                >\n                                    {__('Normale', 'easy-restaurant-menu')}\n                                </Button>\n                            </FlexItem>\n                            <FlexItem>\n                                <Button \n                                    isSecondary\n                                    isSmall\n                                    onClick={() => applySpacingPreset('spacious')}\n                                >\n                                    {__('Ampio', 'easy-restaurant-menu')}\n                                </Button>\n                            </FlexItem>\n                        </Flex>\n                        \n                        <div style={{ textAlign: 'right', marginBottom: '20px' }}>\n                            <Button \n                                isDestructive\n                                isSmall\n                                onClick={resetAllSpacing}\n                            >\n                                {__('Reimposta tutte le spaziature', 'easy-restaurant-menu')}\n                            </Button>\n                        </div>\n                        \n                        <h3>{__('Contenuto', 'easy-restaurant-menu')}</h3>\n                        <BoxCtrl\n                            label={__('Padding contenuto', 'easy-restaurant-menu')}\n                            values={attributes.contentPadding}\n                            onChange={(value) => setAttributes({ contentPadding: value })}\n                            units={[{ value: 'px', label: 'px', default: 15 }]}\n                            allowReset={true}\n                            resetValues={getDefaultSpacing({ top: 15, right: 15, bottom: 15, left: 15 })}\n                        />\n                        \n                        {attributes.showImages && (\n                            <>\n                                <h3>{__('Immagine', 'easy-restaurant-menu')}</h3>\n                                <BoxCtrl\n                                    label={__('Margin immagine', 'easy-restaurant-menu')}\n                                    values={attributes.imageMargin}\n                                    onChange={(value) => setAttributes({ imageMargin: value })}\n                                    units={[{ value: 'px', label: 'px', default: 0 }]}\n                                    allowReset={true}\n                                    resetValues={getDefaultSpacing()}\n                                />\n                                \n                                <BoxCtrl\n                                    label={__('Padding immagine', 'easy-restaurant-menu')}\n                                    values={attributes.imagePadding}\n                                    onChange={(value) => setAttributes({ imagePadding: value })}\n                                    units={[{ value: 'px', label: 'px', default: 0 }]}\n                                    allowReset={true}\n                                    resetValues={getDefaultSpacing()}\n                                />\n                            </>\n                        )}\n                        \n                        <h3>{__('Testo', 'easy-restaurant-menu')}</h3>\n                        <BoxCtrl\n                            label={__('Margin titolo', 'easy-restaurant-menu')}\n                            values={attributes.titleMargin}\n                            onChange={(value) => setAttributes({ titleMargin: value })}\n                            units={[{ value: 'px', label: 'px', default: 0 }]}\n                            allowReset={true}\n                            resetValues={getDefaultSpacing()}\n                        />\n                        \n                        {attributes.showPrices && (\n                            <BoxCtrl\n                                label={__('Margin prezzo', 'easy-restaurant-menu')}\n                                values={attributes.priceMargin}\n                                onChange={(value) => setAttributes({ priceMargin: value })}\n                                units={[{ value: 'px', label: 'px', default: 0 }]}\n                                allowReset={true}\n                                resetValues={getDefaultSpacing()}\n                            />\n                        )}\n                        \n                        {attributes.showDescriptions && (\n                            <BoxCtrl\n                                label={__('Margin descrizione', 'easy-restaurant-menu')}\n                                values={attributes.descriptionMargin}\n                                onChange={(value) => setAttributes({ descriptionMargin: value })}\n                                units={[{ value: 'px', label: 'px', default: 0 }]}\n                                allowReset={true}\n                                resetValues={getDefaultSpacing()}\n                            />\n                        )}\n                    </PanelBody>\n                    \n                    <PanelBody title={__('Allineamento Testi', 'easy-restaurant-menu')} initialOpen={false}>\n                        <p>{__('Allineamento titolo menu', 'easy-restaurant-menu')}</p>\n                        <ButtonGroup>\n                            {textAlignmentOptions.map(option => (\n                                <Button\n                                    key={option.value}\n                                    isPrimary={attributes.menuTitleAlignment === option.value}\n                                    isSecondary={attributes.menuTitleAlignment !== option.value}\n                                    onClick={() => setAttributes({ menuTitleAlignment: option.value })}\n                                >\n                                    {option.label}\n                                </Button>\n                            ))}\n                        </ButtonGroup>\n                        \n                        <p style={{ marginTop: '15px' }}>{__('Allineamento titoli sezioni', 'easy-restaurant-menu')}</p>\n                        <ButtonGroup>\n                            {textAlignmentOptions.map(option => (\n                                <Button\n                                    key={option.value}\n                                    isPrimary={attributes.sectionTitleAlignment === option.value}\n                                    isSecondary={attributes.sectionTitleAlignment !== option.value}\n                                    onClick={() => setAttributes({ sectionTitleAlignment: option.value })}\n                                >\n                                    {option.label}\n                                </Button>\n                            ))}\n                        </ButtonGroup>\n                        \n                        <p style={{ marginTop: '15px' }}>{__('Allineamento descrizione menu', 'easy-restaurant-menu')}</p>\n                        <ButtonGroup>\n                            {textAlignmentOptions.map(option => (\n                                <Button\n                                    key={option.value}\n                                    isPrimary={attributes.menuDescriptionAlignment === option.value}\n                                    isSecondary={attributes.menuDescriptionAlignment !== option.value}\n                                    onClick={() => setAttributes({ menuDescriptionAlignment: option.value })}\n                                >\n                                    {option.label}\n                                </Button>\n                            ))}\n                        </ButtonGroup>\n                        \n                        <p style={{ marginTop: '15px' }}>{__('Allineamento descrizioni sezioni', 'easy-restaurant-menu')}</p>\n                        <ButtonGroup>\n                            {textAlignmentOptions.map(option => (\n                                <Button\n                                    key={option.value}\n                                    isPrimary={attributes.sectionDescriptionAlignment === option.value}\n                                    isSecondary={attributes.sectionDescriptionAlignment !== option.value}\n                                    onClick={() => setAttributes({ sectionDescriptionAlignment: option.value })}\n                                >\n                                    {option.label}\n                                </Button>\n                            ))}\n                        </ButtonGroup>\n                    </PanelBody>\n                    \n                    <PanelBody title={__('Impostazioni Globali', 'easy-restaurant-menu')} initialOpen={false}>\n                        <div style={{ marginBottom: '15px' }}>\n                            <p>{__('Applica le impostazioni globali del plugin a questo blocco.', 'easy-restaurant-menu')}</p>\n                            <Button \n                                isPrimary\n                                onClick={() => {\n                                    if (globalOptions) {\n                                        applyGlobalDefaults(globalOptions);\n                                    }\n                                }}\n                                disabled={isLoadingOptions}\n                                style={{ width: '100%', justifyContent: 'center', marginTop: '10px' }}\n                            >\n                                {isLoadingOptions \n                                    ? __('Caricamento...', 'easy-restaurant-menu') \n                                    : __('Applica Impostazioni Globali', 'easy-restaurant-menu')}\n                            </Button>\n                        </div>\n                        <Notice status=\"info\" isDismissible={false}>\n                            {__('Questo sovrascriverà le impostazioni di colore, allineamento e layout attuali del blocco.', 'easy-restaurant-menu')}\n                        </Notice>\n                    </PanelBody>\n                </InspectorControls>\n                \n                <div {...blockProps}>\n                    {!attributes.menu_id ? (\n                        <div className=\"erm-editor-placeholder\">\n                            <div className=\"erm-editor-placeholder-icon dashicons dashicons-food\"></div>\n                            <div className=\"erm-editor-placeholder-title\">{__('Menu Ristorante', 'easy-restaurant-menu')}</div>\n                            <div className=\"erm-editor-placeholder-description\">{__('Seleziona un menu dal pannello laterale per iniziare.', 'easy-restaurant-menu')}</div>\n                        </div>\n                    ) : (\n                        <div className=\"erm-editor-preview\">\n                            <ServerSideRender\n                                block=\"easy-restaurant-menu/restaurant-menu\"\n                                attributes={attributes}\n                            />\n                        </div>\n                    )}\n                </div>\n            </Fragment>\n        );\n    },\n    \n    save: function() {\n        // Il rendering viene gestito lato server\n        return null;\n    }\n}); ","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","module.exports = window[\"React\"];","module.exports = window[\"wp\"][\"apiFetch\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","module.exports = window[\"wp\"][\"serverSideRender\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"restaurant-menu/index\": 0,\n\t\"restaurant-menu/style-index\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = globalThis[\"webpackChunkeasy_restaurant_menu\"] = globalThis[\"webpackChunkeasy_restaurant_menu\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [\"restaurant-menu/style-index\"], () => (__webpack_require__(\"./src/restaurant-menu/index.js\")))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n",""],"names":["registerBlockType","InspectorControls","ColorPalette","useBlockProps","AlignmentToolbar","PanelBody","SelectControl","RangeControl","ToggleControl","RadioControl","BoxControl","Button","__experimentalBoxControl","BoxControlNew","Flex","FlexItem","Notice","ButtonGroup","Toolbar","__","useSelect","Fragment","useState","useEffect","ServerSideRender","apiFetch","metadata","BoxCtrl","getSpacingCssValue","spacingObj","top","right","bottom","left","getDefaultSpacing","defaultValues","name","edit","props","attributes","setAttributes","blockProps","menus","setMenus","sections","setSections","isMenuLoading","setIsMenuLoading","isSectionLoading","setIsSectionLoading","globalOptions","setGlobalOptions","isLoadingOptions","setIsLoadingOptions","isNewBlock","displayType","default","titleColor","sectionTitleColor","priceColor","descriptionColor","backgroundColor","borderColor","borderRadius","applyGlobalDefaults","options","preset_details","default_layout","updates","menu_title_color","section_title_color","price_color","description_color","background_color","border_color","border_radius","menuTitleAlignment","text_alignment","sectionTitleAlignment","menuDescriptionAlignment","sectionDescriptionAlignment","spacing","itemSpacing","path","then","data","catch","error","console","menu_id","showAllSections","section_id","length","id","toString","sectionExists","some","section","resetAllSpacing","imageMargin","imagePadding","titleMargin","priceMargin","descriptionMargin","contentPadding","handleShowAllSectionsChange","value","menuOptions","push","label","forEach","menu","nome","sectionOptions","displayOptions","hoverOptions","alignmentOptions","textAlignmentOptions","applySpacingPreset","preset","createElement","title","initialOpen","onChange","checked","help","disabled","status","isDismissible","columns","min","max","showImages","selected","listImageAlignment","imageSquare","imageSizeGrid","step","imageSizeList","showPrices","showDescriptions","showMenuDescription","showSectionDescriptions","showMenuTitle","sectionTitleUnderlineColor","borderWidth","boxShadow","hoverEffect","className","direction","justify","align","style","marginBottom","isSecondary","isSmall","onClick","textAlign","isDestructive","values","units","allowReset","resetValues","map","option","key","isPrimary","marginTop","width","justifyContent","block","save"],"sourceRoot":""}